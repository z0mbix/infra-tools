#!/usr/bin/env bash

[[ $TRACE ]] && set -x
set -o pipefail

if [[ ${BASH_VERSINFO[0]} -lt 4 ]]; then
  echo "You need to use bash version 4 or above"
  exit 1
fi

declare -a required_commands=(
  curl
  jq
)

# shellcheck disable=SC2068
for command in ${required_commands[@]}; do
  which $command >/dev/null || {
    echo "You need to install '$command'"
    exit 1
  }
done

readonly bin_path="$(
  cd "$(dirname "$0")" || exit 1
  pwd -P
)"
source "${bin_path}/../lib/common.sh"

declare debug=false

cleanup() {
  rm -rf "${temp_dir}"
}

usage() {
  echo -e "Usage:\n"
  echo "$(basename $0) -s [something] -o [ other] -d"
  echo
  echo "Use -d for debug output and to save the temp directory/files"
  exit 1
}

while getopts ':do:s:' opt; do
  case $opt in
    d) debug=true ;;
    o) other="$OPTARG" ;;
    s) something="$OPTARG" ;;
    *) usage ;;
  esac
done

if [[ $debug != true ]]; then
  trap cleanup EXIT
fi

if [[ -z $something ]]; then
  echo "Something not provided! Set it with -s [something]"
  exit 1
fi

if [[ -z $other ]]; then
  echo "Other not provided! Set it with -o [other]"
  exit 1
fi

# declare here to please shellcheck
declare var_in_sources_file

readonly temp_dir="$(mktemp -d -t vpn)"
readonly timestamp="$(date +"%Y%m%d-%H%M")"

echo "something: $something"
echo "other:     $other"
echo "blah:      $var_in_sources_file"
